---
name: Build/Push Frontend Image
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/build-deploy-frontend.yml'
      - 'frontend/**'
      - 'internal/**'

jobs:
  build_push_frontend:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          fetch-depth: 1

      - name: Build frontend container image
        env:
          ARO_HCP_IMAGE_ACR: devarohcp
        run: |
          cd frontend/
          make image

      - name: 'Az CLI login'
        if: github.event.push.ref == 'refs/heads/main'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


      - name: Push frontend container image
        if: github.event.push.ref == 'refs/heads/main'
        env:
          ARO_HCP_IMAGE_ACR: devarohcp
        run: |
          cd frontend/
          az acr login --name devarohcp
          make push
  deploy_frontend:
    permissions:
      id-token: 'write'
      contents: 'read'
    runs-on: 'ubuntu-latest'
    outputs:
      service_cluster_name: ${{ steps.find_service_cluster.name }}
    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6
        with:
          fetch-depth: 1
      
      - name: 'Az CLI login'
        uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 'Deployment What If'
        id: find_service_cluster
        uses: azure/cli@965c8d7571d2231a54e321ddd07f7b10317f34d9 # v2.0.0
        env:
          RESOURCEGROUP: aro-hcp-dev
        with:
          azcliversion: latest
          inlineScript: |
            echo "name=$(az aks list --resource-group "${RESOURCEGROUP}" --query "[?tags.clusterType == 'svc-cluster'].name | [0]")" >> $GITHUB_OUTPUT
            

      - name: Gets K8s context
        uses: azure/aks-set-context@37037e33d3a2fc08abe40c887d81c3f6e1eb93b9 # v4.0.0
        with:
          resource-group: 'aro-hcp-dev'
          cluster-name: ${{ steps.find_service_cluster.outputs.name }}
      
      - uses: azure/setup-kubectl@3e0aec4d80787158d308d7b364cb1b702e7feb7f # v4.0.0

      - name: List namespaces
        run: |
          kubectl get namespaces